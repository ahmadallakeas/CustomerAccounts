{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { Customer } from '../../shared/Customer.Model';\nimport * as AuthActions from './auth.actions';\nconst initialState = {\n  customer: null,\n  errorMessage: null,\n  loading: false\n};\nconst _authReducer = createReducer(initialState, on(AuthActions.loginStart, AuthActions.signupStart, state => ({\n  ...state,\n  errorMessage: null,\n  loading: true\n})), on(AuthActions.authenticateSuccess, (state, action) => ({\n  ...state,\n  errorMessage: null,\n  loading: false,\n  customer: new Customer(action.firstName, action.lastName, action.email, action.token, action.expirationDate)\n})), on(AuthActions.authenticateFail, (state, action) => ({\n  ...state,\n  errorMessage: action.errorMessage,\n  loading: false\n})));\nexport function authReducer(state, action) {\n  return _authReducer(state, action);\n}","map":{"version":3,"mappings":"AAAA,SAAiBA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AACvD,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,OAAO,KAAKC,WAAW,MAAM,gBAAgB;AAQ7C,MAAMC,YAAY,GAAU;EAC1BC,QAAQ,EAAE,IAAI;EACdC,YAAY,EAAE,IAAI;EAClBC,OAAO,EAAE;CACV;AAED,MAAMC,YAAY,GAAGR,aAAa,CAChCI,YAAY,EAEZH,EAAE,CAACE,WAAW,CAACM,UAAU,EAAEN,WAAW,CAACO,WAAW,EAAGC,KAAK,KAAM;EAC9D,GAAGA,KAAK;EACRL,YAAY,EAAE,IAAI;EAClBC,OAAO,EAAE;CACV,CAAC,CAAC,EACHN,EAAE,CAACE,WAAW,CAACS,mBAAmB,EAAE,CAACD,KAAK,EAAEE,MAAM,MAAM;EACtD,GAAGF,KAAK;EACRL,YAAY,EAAE,IAAI;EAClBC,OAAO,EAAE,KAAK;EACdF,QAAQ,EAAE,IAAIH,QAAQ,CACpBW,MAAM,CAACC,SAAS,EAChBD,MAAM,CAACE,QAAQ,EACfF,MAAM,CAACG,KAAK,EACZH,MAAM,CAACI,KAAK,EACZJ,MAAM,CAACK,cAAc;CAExB,CAAC,CAAC,EAEHjB,EAAE,CAACE,WAAW,CAACgB,gBAAgB,EAAE,CAACR,KAAK,EAAEE,MAAM,MAAM;EACnD,GAAGF,KAAK;EACRL,YAAY,EAAEO,MAAM,CAACP,YAAY;EACjCC,OAAO,EAAE;CACV,CAAC,CAAC,CACJ;AACD,OAAM,SAAUa,WAAW,CAACT,KAAY,EAAEE,MAAc;EACtD,OAAOL,YAAY,CAACG,KAAK,EAAEE,MAAM,CAAC;AACpC","names":["createReducer","on","Customer","AuthActions","initialState","customer","errorMessage","loading","_authReducer","loginStart","signupStart","state","authenticateSuccess","action","firstName","lastName","email","token","expirationDate","authenticateFail","authReducer"],"sourceRoot":"","sources":["C:\\Users\\USER\\source\\repos\\CustomerAccounts\\src\\frontend\\customers-accounts-ui\\src\\app\\auth\\store\\auth.reducer.ts"],"sourcesContent":["import { Action, createReducer, on } from '@ngrx/store';\r\nimport { Customer } from '../../shared/Customer.Model';\r\nimport * as AuthActions from './auth.actions';\r\n\r\nexport interface State {\r\n  customer: Customer;\r\n  errorMessage: string;\r\n  loading: boolean;\r\n}\r\n\r\nconst initialState: State = {\r\n  customer: null,\r\n  errorMessage: null,\r\n  loading: false,\r\n};\r\n\r\nconst _authReducer = createReducer(\r\n  initialState,\r\n\r\n  on(AuthActions.loginStart, AuthActions.signupStart, (state) => ({\r\n    ...state,\r\n    errorMessage: null,\r\n    loading: true,\r\n  })),\r\n  on(AuthActions.authenticateSuccess, (state, action) => ({\r\n    ...state,\r\n    errorMessage: null,\r\n    loading: false,\r\n    customer: new Customer(\r\n      action.firstName,\r\n      action.lastName,\r\n      action.email,\r\n      action.token,\r\n      action.expirationDate\r\n    ),\r\n  })),\r\n\r\n  on(AuthActions.authenticateFail, (state, action) => ({\r\n    ...state,\r\n    errorMessage: action.errorMessage,\r\n    loading: false,\r\n  }))\r\n);\r\nexport function authReducer(state: State, action: Action) {\r\n  return _authReducer(state, action);\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}